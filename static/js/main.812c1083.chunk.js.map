{"version":3,"sources":["components/navbar/NavBar.js","components/image-results/ImageResults.js","components/search/Search.js","App.js","index.js"],"names":["NavBar","title","style","backgroundColor","ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","imageListContent","classes","this","props","images","className","root","GridList","cellHeight","gridList","GridListTile","cols","height","ListSubheader","component","map","src","largeImageURL","alt","GridListTileBar","tags","subtitle","user","actionIcon","IconButton","aria-label","color","onClick","id","actions","label","primary","modal","onRequestClose","width","Component","withStyles","theme","display","flexWrap","justifyContent","overflow","palette","background","paper","Search","onTextChange","e","val","target","value","name","axios","get","apiUrl","apiKey","searchText","imgType","amount","then","res","data","hits","catch","err","console","log","localStorage","setItem","JSON","stringify","onAmountChange","index","onOrientationChange","orientation","onColorChange","prevProps","prevState","onChange","floatingLabelText","fullWidth","primaryText","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.812c1083.chunk.js","sourcesContent":["import React from 'react'\r\nimport  AppBar from 'material-ui/AppBar'\r\n\r\nconst NavBar = () => <AppBar title=\"PIXELS\" style={{ backgroundColor: '#212121'}} />\r\n\r\nexport default NavBar\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { GridList, GridTile } from \"material-ui\";\r\n\r\n// import { IconButton } from \"material-ui\";\r\nimport ZoomIn from \"material-ui/svg-icons/action/zoom-in\";\r\nimport { Dialog } from \"material-ui\";\r\nimport { FlatButton } from \"material-ui\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// import InfoIcon from \"@material-ui/icons/Info\";\r\n// import tileData from \"./tileData\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 1920,\r\n    height: 1080,\r\n  }\r\n});\r\n\r\nclass ImageResults extends Component {\r\n  state = {\r\n    open: false,\r\n    currentImg: \"\",\r\n  };\r\n  handleOpen = (img) => {\r\n    this.setState({ open: true, currentImg: img });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    let imageListContent;\r\n    const { images } = this.props;\r\n    if (images) {\r\n      imageListContent = (\r\n        <>\r\n          <div className={classes.root}>\r\n            <GridList cellHeight={180} className={classes.gridList}>\r\n              <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n                <ListSubheader component=\"div\">Pixels Results:</ListSubheader>\r\n              </GridListTile>\r\n              {images.map((img) => (\r\n                <GridListTile key={img.id}>\r\n                  <img src={img.largeImageURL} alt={\"photo\"} />\r\n                  <GridListTileBar\r\n                    title={img.tags}\r\n                    subtitle={<span>by: <strong>{img.user}</strong></span>}\r\n                    actionIcon={\r\n                      <IconButton\r\n                        aria-label={`info about ${img.tags}`}\r\n                      >\r\n                        <ZoomIn\r\n                        color=\"white\"\r\n                        onClick={() => this.handleOpen(img.largeImageURL)}\r\n                      />\r\n                      </IconButton>\r\n                    }\r\n                  />\r\n                </GridListTile>\r\n              ))}\r\n            </GridList>\r\n          </div>\r\n\r\n          {/* <GridList cols={3}>\r\n            {images.map((img) => {\r\n              return (\r\n                <GridTile\r\n                  title={img.tags}\r\n                  key={img.id}\r\n                  subtitle={\r\n                    <span>\r\n                      by <strong>{img.user}</strong>\r\n                    </span>\r\n                  }\r\n                  actionIcon={\r\n                    <IconButton>\r\n                      <ZoomIn\r\n                        color=\"white\"\r\n                        onClick={() => this.handleOpen(img.largeImageURL)}\r\n                      />\r\n                    </IconButton>\r\n                  }\r\n                >\r\n                  <img src={img.largeImageURL} alt=\"image\" />\r\n                </GridTile>\r\n              );\r\n            })}\r\n          </GridList> */}\r\n        </>\r\n      );\r\n    } else {\r\n      imageListContent = <h1>Type to search for Image</h1>;\r\n    }\r\n    const actions = [\r\n      <FlatButton label=\"Close\" primary={true} onClick={this.handleClose} />,\r\n    ];\r\n    return (\r\n      <div>\r\n        {imageListContent}\r\n        <Dialog\r\n          actions={actions}\r\n          modal={false}\r\n          open={this.state.open}\r\n          onRequestClose={this.handleClose}\r\n        >\r\n          <img src={this.state.currentImg} alt=\"img\" style={{ width: \"100%\" }} />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageResults.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ImageResults);\r\n","import React, { Component } from \"react\";\r\nimport { TextField } from \"material-ui\";\r\nimport { SelectField } from \"material-ui\";\r\nimport { MenuItem } from \"material-ui\";\r\nimport axios from \"axios\";\r\nimport ImageResults from \"../image-results/ImageResults\";\r\n\r\nexport class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchText: \"\",\r\n      amount: 15,\r\n      apiUrl: \"https://pixabay.com/api\",\r\n      apiKey: \"22032123-15db5ac8b33c2f63b3f238650\",\r\n      images: [],\r\n      orientation: \"\",\r\n      color: \"\"\r\n    };\r\n  }\r\n\r\n  onTextChange = (e) => {\r\n    const val = e.target.value;\r\n    this.setState(\r\n      {\r\n        [e.target.name]: val,\r\n      },\r\n      () => {\r\n        if (val === \"\") {\r\n          this.setState({ images: [] });\r\n        } else {\r\n          axios\r\n            .get(\r\n              `${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.searchText}&image_type=${this.state.imgType}&per_page=${this.state.amount}&safesearch=true`\r\n            )\r\n            .then((res) => this.setState({ images: res.data.hits }))\r\n            .catch((err) => console.log(err));\r\n            \r\n              localStorage.setItem('data', JSON.stringify(this.state))\r\n            \r\n        }\r\n      }\r\n    );\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // console.log(prevState.amount)\r\n    // console.log(this.state.amount)\r\n    \r\n    if(this.state.searchText !==\"\") {\r\n      // alert(\"Please Enter text to search images\")\r\n      if (prevState.amount !== this.state.amount || prevState.imgType !== this.state.imgType || prevState.orientation !== this.state.orientation || prevState.color !== this.state.color) {\r\n        axios\r\n          .get(\r\n            `${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.searchText}&image_type=${this.state.imgType}&per_page=${this.state.amount}&orientation=${this.state.orientation}&colors=${this.state.color}&safesearch=true`\r\n          )\r\n          .then((res) => this.setState({ images: res.data.hits }))\r\n          .catch((err) => console.log(err));\r\n          localStorage.setItem('data', JSON.stringify(this.state))\r\n      }\r\n    }\r\n    \r\n  }\r\n  onAmountChange = (e, index, value) => {\r\n    this.setState({\r\n      amount: value,\r\n    });\r\n  };\r\n  onOrientationChange = (e, index, value) => {\r\n    this.setState({\r\n      orientation: value,\r\n    });\r\n  };\r\n  onColorChange = (e, index, value) => {\r\n    this.setState({\r\n      color: value,\r\n    });\r\n  };\r\n  // handleImgType = (e) => {\r\n  //   this.setState({\r\n  //     imgType: e.target.value\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n        <TextField\r\n          name=\"searchText\"\r\n          value={this.state.searchText}\r\n          onChange={this.onTextChange}\r\n          floatingLabelText=\"Search for images\"\r\n          fullWidth={true}\r\n        />\r\n        <br />\r\n        <SelectField\r\n          name=\"amount\"\r\n          floatingLabelText=\"Amount\"\r\n          value={this.state.amount}\r\n          onChange={this.onAmountChange}\r\n        >\r\n          <MenuItem value={5} primaryText=\"5\" />\r\n          <MenuItem value={10} primaryText=\"10\" />\r\n          <MenuItem value={15} primaryText=\"15\" />\r\n          <MenuItem value={30} primaryText=\"30\" />\r\n          <MenuItem value={50} primaryText=\"50\" />\r\n        </SelectField>\r\n        <br />\r\n        <SelectField\r\n          name=\"orientation\"\r\n          floatingLabelText=\"Orientation\"\r\n          value={this.state.orientation}\r\n          onChange={this.onOrientationChange}\r\n        >\r\n          <MenuItem value={\"all\"} primaryText=\"All\" />\r\n          <MenuItem value={\"horizontal\"} primaryText=\"Landscape\" />\r\n          <MenuItem value={\"vertical\"} primaryText=\"Portrait\" />\r\n        </SelectField>\r\n        <br />\r\n        <SelectField\r\n          name=\"colors\"\r\n          floatingLabelText=\"Color Specific\"\r\n          value={this.state.color}\r\n          onChange={this.onColorChange}\r\n        >\r\n          <MenuItem value={\"grayscale\"} primaryText=\"Grayscale\" />\r\n          <MenuItem value={\"transparent\"} primaryText=\"Transparent\" />\r\n          <MenuItem value={\"red\"} primaryText=\"Red\" />\r\n          <MenuItem value={\"orange\"} primaryText=\"Orange\" />\r\n          <MenuItem value={\"yellow\"} primaryText=\"Yellow\" />\r\n          <MenuItem value={\"green\"} primaryText=\"Green\" />\r\n          <MenuItem value={\"blue\"} primaryText=\"Blue\" />\r\n          <MenuItem value={\"pink\"} primaryText=\"Pink\" />\r\n          <MenuItem value={\"white\"} primaryText=\"White\" />\r\n          <MenuItem value={\"gray\"} primaryText=\"Gray\" />\r\n          <MenuItem value={\"black\"} primaryText=\"Black\" />\r\n          <MenuItem value={\"brown\"} primaryText=\"Brown\" />\r\n          <MenuItem value={\"turquoise\"} primaryText=\"Turquoise\" />\r\n        </SelectField>\r\n        <br />\r\n        \r\n        <br />\r\n        {this.state.images.length > 0 ? (\r\n          <ImageResults images={this.state.images} />\r\n        ) :\r\n        this.state.searchText !== \"\" ? \r\n        <div> \r\n        <h1>Sorry! We didn't found any result</h1>\r\n        <h3>Please Try Again</h3>\r\n        </div>\r\n        :\r\n        null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { MuiThemeProvider } from \"material-ui\";\r\nimport NavBar from \"./components/navbar/NavBar\";\r\nimport Search from \"./components/search/Search\";\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider>\r\n      <>\r\n        <NavBar />\r\n        <Search />\r\n      </>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}